# Generated by Django 5.2.1 on 2025-05-31 00:29

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomeCategoria', models.CharField(max_length=100, unique=True, verbose_name='Nome da Categoria')),
            ],
            options={
                'verbose_name': 'Categoria de Produto',
                'verbose_name_plural': 'Categorias de Produtos',
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=20, null=True, verbose_name='RG')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='E-mail')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('dataCadastro', models.DateField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('logradouro', models.CharField(blank=True, max_length=255, null=True, verbose_name='Logradouro (Rua, Av.)')),
                ('numero', models.CharField(blank=True, max_length=10, null=True, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bairro')),
                ('cidade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('uf', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF')),
                ('cep', models.CharField(blank=True, max_length=9, null=True, verbose_name='CEP')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='usuario_set', related_query_name='usuario', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='usuario_set', related_query_name='usuario', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigoBarras', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Código de Barras')),
                ('nomeProduto', models.CharField(max_length=255, verbose_name='Nome do Produto')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('valorUnitario', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor Unitário (R$)')),
                ('quantidadeEstoque', models.PositiveIntegerField(default=0, verbose_name='Quantidade em Estoque')),
                ('plataforma', models.CharField(blank=True, max_length=100, null=True, verbose_name='Plataforma (Jogos/Acessórios)')),
                ('prazoGarantia', models.CharField(blank=True, max_length=100, null=True, verbose_name='Prazo de Garantia')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vendas_api.categoriaproduto', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
            },
        ),
        migrations.CreateModel(
            name='Venda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataHoraVenda', models.DateTimeField(auto_now_add=True, verbose_name='Data e Hora da Venda')),
                ('valorTotalVenda', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Valor Total (R$)')),
                ('formaPagamento', models.CharField(blank=True, choices=[('DINHEIRO', 'Dinheiro'), ('CARTAO_CREDITO', 'Cartão de Crédito'), ('CARTAO_DEBITO', 'Cartão de Débito'), ('PIX', 'PIX')], max_length=50, null=True, verbose_name='Forma de Pagamento')),
                ('statusPagamento', models.CharField(choices=[('PAGO', 'Pago'), ('PENDENTE', 'Pendente'), ('REJEITADO', 'Rejeitado')], default='PENDENTE', max_length=50, verbose_name='Status do Pagamento')),
                ('statusVenda', models.CharField(choices=[('CONCLUIDA', 'Concluída'), ('CANCELADA', 'Cancelada'), ('EM_ABERTO', 'Em Aberto')], default='EM_ABERTO', max_length=50, verbose_name='Status da Venda')),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='vendas_api.cliente', verbose_name='Cliente')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vendas_realizadas', to=settings.AUTH_USER_MODEL, verbose_name='Vendedor')),
            ],
            options={
                'verbose_name': 'Venda',
                'verbose_name_plural': 'Vendas',
            },
        ),
        migrations.CreateModel(
            name='ItemVenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.PositiveIntegerField(verbose_name='Quantidade Vendida')),
                ('precoUnitarioVenda', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preço Unitário na Venda (R$)')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vendas_api.produto', verbose_name='Produto Vendido')),
                ('venda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='vendas_api.venda', verbose_name='Venda Associada')),
            ],
            options={
                'verbose_name': 'Item de Venda',
                'verbose_name_plural': 'Itens de Venda',
            },
        ),
    ]
